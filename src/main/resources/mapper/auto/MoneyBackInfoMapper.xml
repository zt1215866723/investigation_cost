<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xwkj.cost.mapper.auto.MoneyBackInfoMapper">
  <resultMap id="BaseResultMap" type="com.xwkj.cost.model.MoneyBackInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="contract_id" jdbcType="BIGINT" property="contractId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="has_invoice" jdbcType="INTEGER" property="hasInvoice" />
    <result column="invoice_type" jdbcType="INTEGER" property="invoiceType" />
    <result column="arrival_money" jdbcType="TIMESTAMP" property="arrivalMoney" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="invaice_remark" jdbcType="VARCHAR" property="invaiceRemark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, money, contract_id, create_time, has_invoice, invoice_type, arrival_money,
    creator, invaice_remark, status, certificate_number, type_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_gb_money_back_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_gb_money_back_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xwkj.cost.model.MoneyBackInfo">
    insert into tbl_gb_money_back_info (id, money, contract_id,
      create_time, has_invoice, invoice_type,
      arrival_money, creator, invaice_remark,
      status, certificate_number, type_id)
    values (#{id,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL}, #{contractId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{hasInvoice,jdbcType=INTEGER}, #{invoiceType,jdbcType=INTEGER},
      #{arrivalMoney,jdbcType=TIMESTAMP}, #{creator,jdbcType=BIGINT}, #{invaiceRemark,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER}, #{certificateNumber,jdbcType=VARCHAR}, #{typeId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.xwkj.cost.model.MoneyBackInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into tbl_gb_money_back_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="hasInvoice != null">
        has_invoice,
      </if>
      <if test="invoiceType != null">
        invoice_type,
      </if>
      <if test="arrivalMoney != null">
        arrival_money,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="invaiceRemark != null">
        invaice_remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="certificateNumber != null">
        certificate_number,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasInvoice != null">
        #{hasInvoice,jdbcType=INTEGER},
      </if>
      <if test="invoiceType != null">
        #{invoiceType,jdbcType=INTEGER},
      </if>
      <if test="arrivalMoney != null">
        #{arrivalMoney,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="invaiceRemark != null">
        #{invaiceRemark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="certificateNumber != null">
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xwkj.cost.model.MoneyBackInfo">
    update tbl_gb_money_back_info
    <set>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasInvoice != null">
        has_invoice = #{hasInvoice,jdbcType=INTEGER},
      </if>
      <if test="invoiceType != null">
        invoice_type = #{invoiceType,jdbcType=INTEGER},
      </if>
      <if test="arrivalMoney != null">
        arrival_money = #{arrivalMoney,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="invaiceRemark != null">
        invaice_remark = #{invaiceRemark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="certificateNumber != null">
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xwkj.cost.model.MoneyBackInfo">
    update tbl_gb_money_back_info
    set money = #{money,jdbcType=DECIMAL},
      contract_id = #{contractId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      has_invoice = #{hasInvoice,jdbcType=INTEGER},
      invoice_type = #{invoiceType,jdbcType=INTEGER},
      arrival_money = #{arrivalMoney,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=BIGINT},
      invaice_remark = #{invaiceRemark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>